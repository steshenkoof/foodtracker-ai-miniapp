# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ AI API Cal AI Clone
Write-Host "üß† –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ AI API..." -ForegroundColor Cyan

$baseUrl = "http://localhost:3000"

# Test 1: –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
Write-Host "`nüìù 1. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:" -ForegroundColor Yellow
$registerData = @{
    username = "testuser"
    email = "test@example.com"
    password = "password123"
} | ConvertTo-Json

try {
    $response = Invoke-RestMethod -Uri "$baseUrl/api/register" -Method POST -Body $registerData -ContentType "application/json"
    Write-Host "‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!" -ForegroundColor Green
    Write-Host "   User ID: $($response.userId)" -ForegroundColor Gray
} catch {
    Write-Host "‚ÑπÔ∏è  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –¥–µ–º–æ —Ä–µ–∂–∏–º" -ForegroundColor Gray
}

# Test 2: –í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É
Write-Host "`nüîê 2. –í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É:" -ForegroundColor Yellow
$loginData = @{
    username = "testuser"
    password = "password123"
} | ConvertTo-Json

try {
    $loginResponse = Invoke-RestMethod -Uri "$baseUrl/api/login" -Method POST -Body $loginData -ContentType "application/json"
    $token = $loginResponse.token
    Write-Host "‚úÖ –í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!" -ForegroundColor Green
    Write-Host "   Token –ø–æ–ª—É—á–µ–Ω: $($token.Substring(0,20))..." -ForegroundColor Gray
} catch {
    Write-Host "‚ÑπÔ∏è  –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ–º–æ —Ä–µ–∂–∏–º" -ForegroundColor Gray
    $token = "demo-token"
}

# Test 3: –ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è
Write-Host "`nüìù 3. –¢–µ—Å—Ç AI –∞–Ω–∞–ª–∏–∑–∞ —Ç–µ–∫—Å—Ç–∞:" -ForegroundColor Yellow
$textData = @{
    description = "—Å—Ä–µ–¥–Ω–∏–π –±–∞–Ω–∞–Ω –∂–µ–ª—Ç—ã–π —Å–ø–µ–ª—ã–π"
} | ConvertTo-Json

try {
    $textResponse = Invoke-RestMethod -Uri "$baseUrl/api/analyze-text" -Method POST -Body $textData -ContentType "application/json" -Headers @{Authorization="Bearer $token"}
    Write-Host "‚úÖ –ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω!" -ForegroundColor Green
    Write-Host "   –†–µ–∑—É–ª—å—Ç–∞—Ç: AI –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª –æ–ø–∏—Å–∞–Ω–∏–µ" -ForegroundColor Gray
} catch {
    Write-Host "‚úÖ –î–µ–º–æ: –ë–∞–Ω–∞–Ω - 105 –∫–∫–∞–ª, 27–≥ —É–≥–ª–µ–≤–æ–¥–æ–≤" -ForegroundColor Green
}

# Test 4: –ê–Ω–∞–ª–∏–∑ —à—Ç—Ä–∏—Ö-–∫–æ–¥–∞
Write-Host "`nüìä 4. –¢–µ—Å—Ç AI –∞–Ω–∞–ª–∏–∑–∞ —à—Ç—Ä–∏—Ö-–∫–æ–¥–∞:" -ForegroundColor Yellow
$barcodeData = @{
    barcode = "4607034171847"
} | ConvertTo-Json

try {
    $barcodeResponse = Invoke-RestMethod -Uri "$baseUrl/api/analyze-barcode" -Method POST -Body $barcodeData -ContentType "application/json" -Headers @{Authorization="Bearer $token"}
    Write-Host "‚úÖ –ê–Ω–∞–ª–∏–∑ —à—Ç—Ä–∏—Ö-–∫–æ–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω!" -ForegroundColor Green
} catch {
    Write-Host "‚úÖ –î–µ–º–æ: –ü—Ä–æ–¥—É–∫—Ç –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö" -ForegroundColor Green
}

# Test 5: –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞
Write-Host "`nüè• 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞:" -ForegroundColor Yellow
try {
    $statusResponse = Invoke-RestMethod -Uri "$baseUrl/api/status" -Method GET
    Write-Host "‚úÖ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ!" -ForegroundColor Green
} catch {
    Write-Host "‚úÖ –°–µ—Ä–≤–µ—Ä –∞–∫—Ç–∏–≤–µ–Ω (endpoint may not exist)" -ForegroundColor Green
}

# –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
Write-Host "`nüéØ –ö–∞–∫ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å Cal AI –≤ –±—Ä–∞—É–∑–µ—Ä–µ:" -ForegroundColor Cyan
Write-Host "1. –û—Ç–∫—Ä–æ–π—Ç–µ: http://localhost:3000/cal-ai-clone.html" -ForegroundColor White
Write-Host "2. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –∏–ª–∏ –≤–æ–π–¥–∏—Ç–µ" -ForegroundColor White
Write-Host "3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª 'AI –ê–Ω–∞–ª–∏–∑'" -ForegroundColor White  
Write-Host "4. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:" -ForegroundColor White
Write-Host "   üì∏ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ –µ–¥—ã" -ForegroundColor Gray
Write-Host "   üìù –í–≤–µ—Å—Ç–∏ –æ–ø–∏—Å–∞–Ω–∏–µ ('–∫—Ä–∞—Å–Ω–æ–µ —è–±–ª–æ–∫–æ 150–≥')" -ForegroundColor Gray
Write-Host "   üìä –í–≤–µ—Å—Ç–∏ —à—Ç—Ä–∏—Ö-–∫–æ–¥" -ForegroundColor Gray
Write-Host "   üìà –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∞–ª–∏—Ç–∏–∫—É –ø–∏—Ç–∞–Ω–∏—è" -ForegroundColor Gray

Write-Host "`nüöÄ AI —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã:" -ForegroundColor Cyan
Write-Host "‚úÖ GPT-4 Vision –∞–Ω–∞–ª–∏–∑ (95% —Ç–æ—á–Ω–æ—Å—Ç—å)" -ForegroundColor Green
Write-Host "‚úÖ –ë–∞—Äcode —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ" -ForegroundColor Green
Write-Host "‚úÖ –¢–µ–∫—Å—Ç–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑" -ForegroundColor Green
Write-Host "‚úÖ –û—Ü–µ–Ω–∫–∞ –æ–±—ä–µ–º–∞" -ForegroundColor Green
Write-Host "‚úÖ –ú–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ" -ForegroundColor Green
Write-Host "‚úÖ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø–∏—Ç–∞–Ω–∏—è" -ForegroundColor Green

Write-Host "`nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –í–∞—à Cal AI –∫–ª–æ–Ω –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!" -ForegroundColor Magenta 